@page "/subcategory/{categoryId:int}/{subCategoryId:int}"
@using Microsoft.AspNetCore.Authorization
@using ValhallaVaultCyberAwereness.Data.Models
@using ValhallaVaultCyberAwereness.Service
@inject ValhallaVaultCyberAwereness.Service.CategoryRepo CategoryRepo


<h3>Del @subCategoryId</h3>

@if (segments.Any())
{
    <div>
      
      
                <!--Displaya alla questions will varje fråga-->
        <div>
        @foreach (var question in questions.Where(q => q.SegmentId == subCategoryId))
                {
                          <br />
                        <p><strong>Subkategori @question.Title</strong></p> 
                      
                }
            <a href="/questionpage/@categoryId/@subCategoryId">  <button class="btn btn-outline-primary">Testa frågorna för del @subCategoryId</button> </a>
        </div>
    </div>

}
else
{
    <p>Hmm.. error 404.</p>
}


@code {
    private List<Segment> segments = new List<Segment>();
    private List<Question> questions = new List<Question>();
    [Inject]
    private SegmentRepo segmentRepo { get; set; }
    [Inject]
    private CategoryRepo categoryRepo { get; set; }
    [Inject]
    private QuestionRepo questionRepo { get; set; }
    [Inject]
    private NavigationManager navigationManager { get; set; }


    [Parameter]
    public int categoryId { get; set; }

    [Parameter]
    public int subCategoryId { get; set; }


    private Category selectedCategory;

    protected override async Task OnInitializedAsync()
    {
        segments = await segmentRepo.GetSegmentsByCategoryIdAsync(categoryId);
        // displaya vald category
        selectedCategory = await categoryRepo.GetCategoryByIdAsync(categoryId);
        // Displaya questions will varje segment
        questions = await questionRepo.GetAllQuestionAsync();
    }


}
