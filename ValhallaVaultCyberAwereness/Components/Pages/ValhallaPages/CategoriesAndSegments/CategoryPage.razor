@page "/categorypage"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using ValhallaVaultCyberAwereness.Data.Models
@using ValhallaVaultCyberAwereness.Service
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Authorize]

<h3>Kategorier </h3>

<br />
<br />

@if (categories != null && categories.Any())
{
    @foreach (var category in categories)
    {
        <div>
            <h4>
                <a href="/segmentpage/@category.CategoryId" class="btn btn-outline-primary"> @category.Categories</a>
            </h4> <!-- Display alla Katerogier -->
            <p>@InformationAboutACategory(category.CategoryId)</p> <!--Displaya lite information om dom.-->
            <p>I denna kategori ingår följande segment: @category.Categories</p>
            <ul>
                @foreach (var segment in category.Segments)
                {
                    <li>
                        @segment.SegmentTitle
                         - Antal rätt svar: @segment.CalculateCorrectAnswers(userAnswers).ToString("F2")% 
        
                    </li>
                }
            </ul>
        </div>
    }
}



@code {
    private List<Category> categories;
    [Inject]
    private CategoryRepo categoryRepo { get; set; }
    private Question questions;
    private string selectedCategory;

    private List<AnswerUser> userAnswers;

    private AnswerRepo answerRepo;
    private string userId;


    protected override async Task OnInitializedAsync()
    {
        categories = await categoryRepo.GetAllCategoriesAsync();

       // userAnswers = await answerRepo.GetAllAnswersAsync(); Får null, behöver hita UserId: (finns ej), måste läggas till i AnswerUser. UserId är string/Guid

    }

    // private async Task<List<AnswerUser>> GetTheUsersAnswers()
    // {
     
    // }


    private async Task OnCategorySelected(ChangeEventArgs args)
    {
        selectedCategory = args.Value.ToString();

        await InvokeAsync(StateHasChanged);
    
    }



    private string InformationAboutACategory(int categoryId)
    {
        switch (categoryId)
        {
            case 1:
                return "Denna kategoeri handlar om sätt att kunna skydda sig emot bedrägerier och lite utbildning.";
            case 2:
                return "Í denna kategoeri handlar det om för företag hur man kan bygga säker cyberinfrastruktur.";
            case 3:
                return "Cyberangreppen blir allt fler och en allt större post som behöver läggas undan för företagen.";
            default:
                return "Ingen info.";
        }
    }

}


