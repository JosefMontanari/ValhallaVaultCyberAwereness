@page "/add/{type}"
@using Microsoft.AspNetCore.Authorization
@using ValhallaVaultCyberAwereness.Data.Models
@using ValhallaVaultCyberAwereness.Service
@rendermode InteractiveServer
@inject CategoryRepo categoryRepo
@inject SegmentRepo segmentRepo
@inject QuestionRepo questionRepo
@inject NavigationManager navigationManager
@attribute [Authorize(Roles = "Admin")]

@if(Type == "Category")
{
	<EditForm Model="CategoryToAdd" OnValidSubmit="HandleSubmit">
		<div>
			<label>Category name:</label>
			<DataAnnotationsValidator />
			<InputText id="CategoryName" @bind-Value="CategoryToAdd.Categories" class="form-control"></InputText>
			<ValidationSummary></ValidationSummary>
		</div>
		<br />
		<button type="submit" class="btn btn-primary">Add new category</button>
	</EditForm>
}
else if(Type == "Segment")
{
	<EditForm Model="SegmentToAdd" OnValidSubmit="HandleSubmit">
		<div>
			<label>Segment name:</label>
			<DataAnnotationsValidator />
			<InputText id="SegmentName" @bind-Value="SegmentToAdd.SegmentTitle" class="form-control"></InputText>
			<ValidationSummary></ValidationSummary>
		</div>

		<div>
			<label>Choose category:</label>
			<InputSelect @bind-Value="SegmentToAdd.CategoryId" class="form-select">
				<option value="">None</option>
				@foreach (var category in categoryRepo.categories)
				{
					<option value="@category.CategoryId">@category.Categories</option>
				}
			</InputSelect>
		</div>
		<br />
		<button type="submit" class="btn btn-primary">Add new segment</button>

	</EditForm>
}
else if(Type == "Question")
{
	<EditForm Model="QuestionToAdd" OnValidSubmit="HandleSubmit">
		<div>
			<label>Question title:</label>
			<DataAnnotationsValidator />
			<InputText id="QuestionTitle" @bind-Value="QuestionToAdd.Title" class="form-control"></InputText>
			<ValidationSummary></ValidationSummary>
		</div>

		<div>
			<label>Question:</label>
			<InputText id="Question" @bind-Value="QuestionToAdd.Questions" class="form-control"></InputText>
		</div>

		<div>
			<label>(Optional) Possible answers:</label>
			<InputText id="QuestionAnswerOne" @bind-Value="QuestionToAdd.PossibleAnswers[0]" class="form-control"></InputText>
			<InputText id="QuestionAnswerTwo" @bind-Value="QuestionToAdd.PossibleAnswers[1]" class="form-control"></InputText>
			<InputText id="QuestionAnswerThree" @bind-Value="QuestionToAdd.PossibleAnswers[2]" class="form-control"></InputText>
		</div>

		<div>
			<label>Correct answer (Has to be identical with one of the answers):</label>
			<InputText id="QuestionAnswer" @bind-Value="QuestionToAdd.CorrectAnswer" class="form-control"></InputText>
		</div>

		<div>
			<label>Choose segment:</label>
			<InputSelect @bind-Value="QuestionToAdd.SegmentId" class="form-select">
				<option value="">None</option>
				@foreach (var segment in segmentRepo.segments)
				{
					<option value="@segment.SegmentId">
						@segment.SegmentTitle
						@if (@segment.Category != null)
						{
							<span> (@segment.Category.Categories)</span>
						}
					</option>
				}
			</InputSelect>
		</div>

		<br />
		<button type="submit" class="btn btn-primary">Submit</button>
	</EditForm>
}
else
{
	<p>Please choose a type before coming here...</p>
}

@code {
	[Parameter]
	public string? Type { get; set; }
	public Category? CategoryToAdd { get; set; } = new();
	public Segment? SegmentToAdd { get; set; } = new();
	public Question? QuestionToAdd { get; set; } = new();

	protected override void OnParametersSet()
	{
		base.OnParametersSet();
	}
	private async void HandleSubmit()
	{
		if (CategoryToAdd != null)
		{
			await categoryRepo.AddCategoryAsync(CategoryToAdd);
			navigationManager.NavigateTo("/admin");

		}
		else if (SegmentToAdd != null)
		{
			await segmentRepo.AddSegmentAsync(SegmentToAdd);
			navigationManager.NavigateTo("/admin");

		}
		else if (QuestionToAdd != null)
		{
			await questionRepo.AddQuestionAsync(QuestionToAdd);
			navigationManager.NavigateTo("/admin");

		}
	}
}
