@page "/edit/{type}/{id:int}"
@using Microsoft.AspNetCore.Authorization
@using ValhallaVaultCyberAwereness.Data.Models
@using ValhallaVaultCyberAwereness.Service
@rendermode InteractiveServer
@inject CategoryRepo categoryRepo
@inject SegmentRepo segmentRepo
@inject QuestionRepo questionRepo
@attribute [Authorize(Roles= "Admin")]
<h3>Edit</h3>

@if(CategoryToEdit != null)
{
	<EditForm Model="CategoryToEdit" OnSubmit="HandleSubmit">
		<label>Category name:</label>
		<InputText id="CategoryName" @bind-Value="CategoryToEdit.Categories" class="form-control"></InputText>
		<button type="submit" class="btn btn-primary">Submit</button>
		<button type="button" class="btn btn-primary" @onclick="DeleteCategory">Delete Category</button>
	</EditForm>
}
else if(SegmentToEdit != null)
{
	<h1>@SegmentToEdit.SegmentTitle</h1>
}
else if(QuestionToEdit != null)
{
	<h1>@QuestionToEdit.Questions</h1>
}
else
{
	<span>Loading...</span>
}

@code {
	[Parameter]
	public int Id { get; set; }
	[Parameter]
	public string? Type { get; set; }
	public Category? CategoryToEdit { get; set; }
	public Segment? SegmentToEdit { get; set; }
	public Question? QuestionToEdit { get; set; }

	protected async override Task OnParametersSetAsync()
	{
		if(Type == "Category")
		{

			CategoryToEdit = await categoryRepo.GetCategoryByIdAsync(Id);
		}
		else if(Type == "Segment")
		{
			SegmentToEdit = await segmentRepo.GetSegmentByIdAsync(Id);
		}
		else if(Type == "Question")
		{
			QuestionToEdit = await questionRepo.GetQuestionByIdAsync(Id);
		}
	}

	private async void HandleSubmit()
	{
		if(CategoryToEdit != null)
		{
			await categoryRepo.UpdateCategoryAsync(CategoryToEdit);

		}
	}
	private async void DeleteCategory()
	{
		await categoryRepo.DeleteCategoryAsync(CategoryToEdit);
	}
}
